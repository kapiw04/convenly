version: "3"

dotenv:
  - .env

vars:
  APP_PACKAGE: ./cmd/app
  BINARY_DIR: bin
  BINARY_NAME: app
  BINARY_PATH: "{{.BINARY_DIR}}/{{.BINARY_NAME}}"

tasks:
  default:
    desc: Show help information
    deps:
      - help

  help:
    desc: List available tasks
    silent: true
    cmds:
      - task --list

  fmt:
    desc: Format Go source files
    cmds:
      - go fmt ./...

  tidy:
    desc: Tidy module dependencies
    cmds:
      - go mod tidy

  test:
    desc: Run all Go tests
    cmds:
      - go test ./...

  build:
    desc: Build the application binary
    deps:
      - fmt
    cmds:
      - mkdir -p {{.BINARY_DIR}}
      - go build -o {{.BINARY_PATH}} {{.APP_PACKAGE}}

  run:
    desc: Run the built application (expects database connectivity)
    deps:
      - build
    cmds:
      - ./{{.BINARY_PATH}}

  clean:
    desc: Remove build artifacts
    cmds:
      - rm -rf {{.BINARY_DIR}}

  "dev:up":
    desc: Start the Docker development stack (db, migrations, backend)
    cmds:
      - docker compose up --build

  "dev:down":
    desc: Stop the Docker stack and remove containers
    cmds:
      - docker compose down

  "migrations":
    desc: Run all migrations
    cmds:
      - docker compose run migrate

  "enter-postgres":
    desc: Enter the Postgres container's psql shell
    cmds:
      - docker compose exec db psql -U ${POSTGRES_USER} -d ${POSTGRES_DB}